# Deployment with 3 replicas, init container, and NodePort service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-with-init
spec:
  replicas: 3  # <<-- CHANGED TO 3 REPLICAS >>
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      # Init container runs once per pod to initialize shared volume
      initContainers:
        - name: init-busybox
          image: busybox
          # Writes HTML with dynamic pod name and port info
          command: ['sh', '-c', 'echo "<html><body><h1>Hello from InitContainer!</h1><p>Served on NodePort 30000</p><p>Pod: ${HOSTNAME}</p></body></html>" > /shared-volume/index.html']
          env:
            - name: HOSTNAME  # Injects pod name automatically
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: shared-volume
              mountPath: /shared-volume
      
      # Main NGINX container
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80  # NGINX listens here
          volumeMounts:
            - name: shared-volume
              mountPath: /usr/share/nginx/html  # NGINX web root
      
      # Shared emptyDir volume (ephemeral pod storage)
      volumes:
        - name: shared-volume
          emptyDir: {}

---
# Service to expose the deployment
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: NodePort
  selector:
    app: nginx  # Targets pods with this label
  ports:
    - protocol: TCP
      port: 80        # Service port (cluster-internal)
      targetPort: 80  # Pod port to forward to
      nodePort: 30000 # <<-- Exposed on each worker node >>
